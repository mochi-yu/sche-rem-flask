openapi: 3.0.0
info:
  title: 'Sche Rem'
  version: '1.0'
  description: 'Open HackU 2023 Nagoyaにて作成したSche RemのAPIドキュメント'
servers:
  - url: 'http://example.com'
paths:
  "/group":
    post:
      summary: "日程調整のグループを作成する"
      tags:
        - Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                groupName:
                  type: string
                  description: 日程調整の名前
                author:
                  type: string
                  description: 日程調整の作成者
                groupUsers:
                  type: array
                  items:
                    type: string
                    description: "参加者のメールアドレス"
                    example: "sample@example.com"
                  description: 日程調整の参加者の一覧
                startDay:
                  type: string
                  description: 日程調整の開始日
                endDat:
                  type: string
                  description: 日程調整の終了日
                startHour:
                  type: string
                  description: 日程調整の開始時刻
                endHour:
                  type: string
                  description: 日程調整の終了時刻
      responses:
        '200':
          description: '正常に新しいグループを作成'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInfo'

  "/group/{groupId}":
    get:
      summary: "日程調整のグループの情報を取得する"
      tags:
        - "Group"
      parameters:
        - in: path
          name: groupId
          schema:
            type: string
          required: true
          description: "groupIdで指定したグループの情報を取得する"
      responses:
        '200':
          description: "指定したグループの情報を返却"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupInfo'

  "/tag":
    post:
      summary: "センサやスマホアプリから、NFCより取得した情報を受け取る"
      tags:
        - Tag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tagId:
                  type: string
                  description: "参加者を識別するためのタグのID"
                  example: "strawberry"
                stepNo:
                  type: number
                  description: "どの段階に到達したかを表すステップの番号"
                  example: 2
                boothId:
                  type: string
                  description: "そのステップ内のどのブースにいるかを表すID"
                  example: "Booth 3"
                operator:
                  type: string
                  description: "ブースを担当している人の名前(スマホの場合)"
                  example: "諏訪 太郎"
                content:
                  type: string
                  description: "ログの内容"
                  example: "assign"
              required:
                - tagId
                - stepNo
      responses:
        '200':
          description: '正常にログを記録'
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "OK"
                    
  "/status":
    get:
      summary: "現在の各ブースの状況を取得"
      tags:
        - Web
      responses:
        '200':
          description: '現在の各ブースの状況を取得'
          content:
            application/json:
              schema:
                type: object
                properties:
                  steps:
                    type: array
                    items:
                      type: object
                      properties:
                        boothes:
                          type: array
                          items:
                            $ref: "#/components/schemas/BoothStatus"
  
  "/logs":
    get:
      summary: "ログの一覧を取得する"
      tags:
        - Web
      responses:
        '200':
          description: '現在の各ブースの状況を取得'
          content:
            application/json:
              schema:
                type: object
                properties:
                  logs:
                    type: array
                    items:
                      $ref: "#/components/schemas/Log"

  '/ping':
    get:
      summary: 'GETの疎通確認'
      tags:
        - System
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: '名前'
      responses:
        '200':
          description: '挨拶をレスポンス'
          content:
            application/json:
              schema:
                type: string
                description: "挨拶"
                example: "[GET test] : Hello {name}!!"
                
    post:
      summary: 'POSTの疎通確認'
      tags:
        - System
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: '名前'        
      responses:
        '200':
          description: '挨拶をレスポンス'
          content:
            application/json:
              schema:
                type: string
                description: "挨拶"
                example: "[POST test] : Hello {name}!!"
                
components:
  schemas:
    GroupInfo:
      title: "GroupInfo"
      description: "グループの情報"

      type: object
      properties:
        groupID:
          type: string
          description: グループのID
        groupName:
          type: string
          description: 日程調整の名前
        author:
          type: string
          description: 日程調整の作成者
        groupUsers:
          type: array
          items:
            type: string
            description: "参加者のメールアドレス"
            example: "sample@example.com"
          description: 日程調整の参加者の一覧
        schedules:
          type: array
          items:
            type: object
            properties:
              userMailAddress:
                type: string
                description: ユーザのメールアドレス
              scheduleInfo:
                $ref: '#/components/schemas/ScheduleInfo'
        startDay:
          type: string
          description: 日程調整の開始日
        endDat:
          type: string
          description: 日程調整の終了日
        startHour:
          type: string
          description: 日程調整の開始時刻
        endHour:
          type: string
          description: 日程調整の終了時刻
    
    ScheduleInfo:
      title: "ScheduleInfo"
      description: "各ユーザのスケジュールの情報"
      type: array
      items:
        type: array
        items:
          type: boolean

    BoothStatus:
      title: "BoothStatus"
      description: "ブースの状況"
      type: object
      properties:
        boothId:
          type: string
          description: "そのブースのID"
          example: "Booth 3"
        status:
          type: string
          description: "ブースの状況。busy / idle / close"
          example: "busy"
        tagId:
          type: string
          description: "ブースがbusyのときの、ブースに居る人のタグのID"
          example: "strawberry"
        startTime:
          type: number
          description: "ブースがbusyのときの、ブースの開始時間。UNIX時間を渡す。"
          example: 123456789
        operator:
          type: string
          description: "ブースの担当者名。スマホからの読み取りの場合のみ"
          example: "諏訪 太郎"
    Log:
      title: "Log"
      description: "NFCタグを用いた情報のログ"
      type: object
      properties:
        time:
          type: number
          description: "ログを記録した時間。UNIX時間。"
          example: 123456789
        tagId:
          type: string
          description: "参加者を識別するためのタグのID"
          example: "strawberry"
        stepNo:
          type: number
          description: "どの段階に到達したかを表すステップの番号"
          example: 2
        boothId:
          type: string
          description: "そのステップ内のどのブースにいるかを表すID"
          example: "Booth 3"
        operator:
          type: string
          description: "ブースを担当している人の名前(スマホの場合)"
          example: "諏訪 太郎"
        content:
          type: string
          description: "ログの内容"
          example: "assign"

tags:
  - name: Tag
    description: 'NFCタグにより取得した情報を受け取るAPI'
  - name: Web
    description: 'ログや履歴の情報をWebアプリケーションへ渡すAPI'
  - name: System
    description: 'システムに関わるAPI'
